syntax = "proto3";

option go_package = ".;pb";

package seabird;

service Seabird {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc EventStream(EventStreamRequest) returns (stream SeabirdEvent) {}

  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
  rpc SendReplyMessage(SendReplyMessageRequest) returns (SendReplyMessageResponse) {}

  rpc GetChannel(ChannelRequest) returns (ChannelResponse) {}
  rpc JoinChannel(JoinChannelRequest) returns (JoinChannelResponse) {}
  rpc LeaveChannel(LeaveChannelRequest) returns (LeaveChannelResponse) {}
}

message RegisterRequest {
  int32 protocolVersion = 1;
  string identifier = 2;
}

message RegisterResponse {
  string clientId = 1;
}

message EventStreamRequest {
  repeated CommandRegistration commands = 1;
}

message CommandRegistration {
  string name = 1;
  string shortHelp = 2;
  string fullHelp = 3;
}

message SeabirdEvent {
  oneof Event {
    MessageEvent message = 1;
    PrivateMessageEvent privateMessage = 2;
    MentionEvent mention = 3;
    CommandEvent command = 4;
  }
}

message MessageEvent {
  string channel = 1;
  string sender = 2;
  string message = 3;
}

message PrivateMessageEvent {
  string sender = 1;
  string message = 3;
}

message MentionEvent {
  string channel = 1;
  string sender = 2;
  string message = 3;
}

message CommandEvent {
  string channel = 1;
  string sender = 2;
  string command = 3;
  string arg = 4;
}

message SendMessageRequest {
  string target = 1;
  string message = 2;
}

message SendMessageResponse {}

message SendReplyMessageRequest {
  SeabirdEvent target = 1;
  string message = 2;
  bool mention = 3;
}

message SendReplyMessageResponse {}

message ChannelRequest {
  string name = 1;
}

message User {
  string nick = 1;
}

message ChannelResponse {
  string name = 1;
  string topic = 2;
  repeated User users = 3;
}

message JoinChannelRequest {
  string target = 1;
}

message JoinChannelResponse {}

message LeaveChannelRequest {
  string target = 1;
  string message = 2;
}

message LeaveChannelResponse {}
